version: '3.9'

services:
  #####APP_SERVER
  app_server:
    container_name: app_server
    image: app_server:1.0.0
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    command: npm run start:prod
    env_file: .env
    ports:
      - '3000:3000'
      - '9229:9229'
    networks:
      - app-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    depends_on:
      - database
  ##DB
  database:
    container_name: app_postgres_dev
    image: postgres:12
    env_file: .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - '5432:5432'
    healthcheck:
      test: pg_isready
      interval: 10s
      timeout: 5s
      retries: 5
  #ELK
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.4.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

networks:
  app-network:

volumes:
  postgres-data:
  elasticsearch-data:
    driver: local